.SHELL   = bash
.ALL     = purge pth pdh
.DEFAULT = check

.ABOUT = "split, merge and give stats of the archive"

include commons.mf

commands= tmcat ppcat comma parallel

lookup(help="look for commands in PATH"):
	declare -a broken
	for cmd in %(commands); do
		which $cmd > /dev/null
		code=$?
		if [ $code -ne 0 ]; then
			STATUS='\x1b[38;5;1m[ KO ]\x1b[0m'
			broken+=($cmd)
		else
			STATUS='\x1b[38;5;2m[ OK ]\x1b[0m'
		fi
		echo -e "$STATUS $cmd"
	done
	if [ ${#broken[@]} -gt 0 ]; then
		echo "broken dependencies: ${broken[@]}"
		exit ${#broken[@]}
	fi

keys(help="copy ssh key to host(s)", local=true):
	if [[ ! -f %(lockey) ]]; then
		ssh-keygen -t %(alg) -b %(bitsize) -f %(lockey) -N '%(passphrase)'
	fi
	parallel --jobs 10 ssh-copy-id -i %(lockey) %(user)@{1} ::: %(hosts)

status(help="listing per year"):
	mkdir -p %(bdsr)
	for pid in %(pids); do
		mkdir -p %(bdsr)/$pid
	done
	parallel --jobs 12 rtcheck -csv %(tmdat)/{1}/{2} '>' %(bdsr)/{1}/{2}.csv ::: %(pids) ::: {2008..2020} &> /dev/null
	find %(bdsr) -type f -empty -delete

buildsite(help="make site from stats"):
	echo "not yet implemented"

pth(help="split archive by APID and generate report"):
	if [[ ! -d %(tmdir) ]]; then
		echo "%(tmdir): not a directory"
		exit 123
	fi
	%(seggr) -t TM -d %(tmdir) -w %(tmdat) %(pids)
	if [ $? -ne 0 ]; then
		exit 125
	fi
	%(stat) -t TM -d %(tmdat)
	if [ $? -ne 0 ]; then
		exit 124
	fi

pdh(help="split archive by UMI and generate report"):
if [[ ! -d %(ppdir) ]]; then
	echo "%(tmdir): not a directory"
	exit 123
fi
	%(seggr) -t PP -d %(ppdir) -w %(ppdat) $(ls *.csv)
	if [ $? -ne 0 ]; then
		exit 125
	fi
	%(stat) -t PP -d %(ppdat)
	if [ $? -ne 0 ]; then
		exit 124
	fi

umicount(help="count number of umi code in listing files"):
	for file in $(ls *.csv); do
		echo "codes: $(wc -l $file) $(md5sum $file)"
	done

check(help="check integrity of rt files created"):
	rtcheck -csv %(tmdat) %(ppdat)
	find -mindepth 1 -type f -name *dat -exec xxh '{}' \;

purge(help="remove all files and directory", hazardous=true):
	rm -rf %(ppdat)
	rm -rf %(tmdat)
	rm -rf %(bdsr)
